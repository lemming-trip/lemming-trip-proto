syntax = "proto3";

package lemmingtrip.models.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/lemming-trip/lemming-trip-proto/proto/lemmingtrip/models/v1;modelsv1";
option java_multiple_files = true;
option java_package = "com.lemmingtrip.models.v1";
option swift_prefix = "LTModelsV1";

// User's Role
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0; // Default value, should not be used
  USER_ROLE_TOURIST = 1; // Regular user, can create trips and comments
  USER_ROLE_GUIDE = 2; // User with guide privileges, can create trips and manage comments
  USER_ROLE_MODERATOR = 3; // Moderator, can manage content and users but with limited administrative privileges
  USER_ROLE_ADMINISTRATOR = 4; // Administrator, has full access to manage users and content
}

// Privacy settings for user
message PrivacySettings {
  bool profile_visible = 1; // Is the user's profile visible to others
  bool email_visible = 2; // Is the user's email visible to others
}

// User's preferences
message UserPreferences {
  map<string, string> preferences = 1; // Key-value pairs for user preferences, e.g., {"language": "en", "timezone": "UTC"}
}

// User's model
message User {
  string id = 1; // Unique identifier for the user
  string email = 2; // User's email address
  bool is_active = 3; // Is the user active (not banned or deleted)
  UserRole user_role = 4; // User's role in the system
  string avatar = 5; // URL of the user's avatar image
  string phone = 6; // User's phone number
  string city = 7; // User's city
  string address = 8; // User's address
  string first_name = 9; // User's first name
  string last_name = 10; // User's last name
  string middle_name = 11; // User's middle name
  google.protobuf.Timestamp date_birth = 12; // User's date of birth as a full timestamp (RFC 3339 format); if only date is needed, consider using google.type.Date
  string description = 13; // User's description or bio
  PrivacySettings privacy_settings = 14; // User's privacy settings
  UserPreferences preferences = 15; // User's preferences
  bool ban = 16; // Is the user banned
  string ban_reason = 17; // Reason for banning the user, if applicable
  google.protobuf.Timestamp created_at = 18; // Timestamp of when the user was created in ISO 8601 format
  google.protobuf.Timestamp updated_at = 19; // Timestamp of the last update to the user's information in ISO 8601 format
  google.protobuf.Timestamp last_seen_at = 20; // Timestamp of the last time the user was active in ISO 8601 format
  google.protobuf.Timestamp ban_at = 21; // Timestamp of when the user was banned, if applicable, in ISO 8601 format
}

// Create a new user
message CreateUserRequest {
  string email = 1; // User's email address
  UserRole user_role = 2; // User's role in the system
  bool is_active = 3; // Is the user active (not banned or deleted)
  string avatar = 4; // URL of the user's avatar image
  string phone = 5; // User's phone number
  string city = 6; // User's city
  string address = 7; // User's address
  string first_name = 8; // User's first name
  string last_name = 9; // User's last name
  string middle_name = 10; // User's middle name
  google.protobuf.Timestamp date_birth = 11; // User's date of birth as a full timestamp (RFC 3339 format); if only the date is needed, consider using google.type.Date
  string description = 12; // User's description or bio
}

// Response after creating a user
message CreateUserResponse {
  User user = 1; // Created user information
}

// Get user by ID
message GetUserRequest {
  string id = 1; // User ID to retrieve
}

// Response with user information
message GetUserResponse {
  User user = 1; // User information
}

// Update user information
message UpdateUserRequest {
  string id = 1; // User ID to update
  string email = 2; // New email address
  UserRole user_role = 3; // New user role
  bool is_active = 4; // Is the user active
  string avatar = 5; // URL of the user's avatar
  string phone = 6; // User's phone number
  string city = 7; // User's city
  string address = 8; // User's address
  string first_name = 9; // User's first name
  string last_name = 10; // User's last name
  string middle_name = 11; // User's middle name
  google.protobuf.Timestamp date_birth = 12; // User's date of birth
  string description = 13; // User's description
}

// Response after updating user information
message UpdateUserResponse {
  User user = 1; // Updated user information
}

// Delete user by ID
message DeleteUserRequest {
  string id = 1; // User ID to delete
}

// Response after deleting a user
message DeleteUserResponse {
  bool success = 1; // Indicates if the deletion was successful
}

// Restore user by ID
message RestoreUserRequest {
  string id = 1; // User ID to restore
}

// Response after restoring a user
message RestoreUserResponse {
  User user = 1; // Restored user information
}

// Change user's email
message ChangeEmailRequest {
  string id = 1; // User ID to change email for
  string new_email = 2; // New email address
}

// Response after changing user's email
message ChangeEmailResponse {
  User user = 1; // Updated user information with new email
}

// Change user's role
message ChangeRoleRequest {
  string id = 1; // User ID to change role for
  UserRole new_role = 2; // New user role (as enum)
}

// Response after changing user's role
message ChangeRoleResponse {
  User user = 1; // Updated user information with new role
}

// Ban user
message BanUserRequest {
  string id = 1; // User ID to ban
  string reason = 2; // Reason for banning the user
}

// Response after banning a user
message BanUserResponse {
  User user = 1; // Banned user information
}

// Unban user
message UnbanUserRequest {
  string id = 1; // User ID to unban
}

// Response after unbanning a user
message UnbanUserResponse {
  User user = 1; // Unbanned user information
}

// Update user's privacy settings
message UpdatePrivacyRequest {
  string id = 1; // User ID to update privacy settings for
  PrivacySettings privacy_settings = 2; // New privacy settings
}

// Response after updating user's privacy settings
message UpdatePrivacyResponse {
  User user = 1; // Updated user information with new privacy settings
}

// List users with pagination and filtering
message ListUsersRequest {
  int32 take = 1; // Number of users to take
  int32 skip = 2; // Number of users to skip
  string filter = 3; // Filter criteria (e.g., by role, city, etc.)
  string sort_by = 4; // Field to sort by (e.g., "created_at", "last_seen_at")
  bool desc = 5; // Sort order (true for descending, false for ascending)
}

// Response with a list of users
message ListUsersResponse {
  repeated User users = 1; // List of users
  int32 total = 2; // Total number of users matching the criteria
}

// Get user statistics
message GetUserStatsRequest {
  string id = 1; // User ID to get statistics for
}

// Response with user statistics
message GetUserStatsResponse {
  int32 trips_count = 1; // Number of trips the user has created
  int32 comments_count = 2; // Number of comments the user has made
  int32 likes_count = 3; // Number of likes the user has received
}
