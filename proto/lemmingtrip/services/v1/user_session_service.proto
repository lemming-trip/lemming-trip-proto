syntax = "proto3";
package lemmingtrip.services.v1;

import "lemmingtrip/models/v1/user_session.proto";

option go_package = "github.com/lemming-trip/lemming-trip-proto/proto/lemmingtrip/services/v1;servicesv1";
option java_multiple_files = true;
option java_package = "com.lemmingtrip.services.v1";
option swift_prefix = "LTServicesV1";

// UserSessionsService defines the service for managing user sessions.
// It includes methods for creating, retrieving, revoking, and listing user sessions,
// as well as additional methods for session management such as refreshing, validating,
// and terminating sessions.
// This service is designed to handle user session operations in a secure and efficient manner.
// It is used by the user session management system to ensure that user sessions are
// properly managed and maintained throughout their lifecycle.
service UserSessionsService {
  // CreateSession creates a new user session with the provided details.
  rpc CreateSession(lemmingtrip.models.v1.CreateSessionRequest) returns (lemmingtrip.models.v1.CreateSessionResponse);
  // GetSession retrieves a user session by its ID.
  rpc GetSession(lemmingtrip.models.v1.GetSessionRequest) returns (lemmingtrip.models.v1.GetSessionResponse);
  // RevokeSession revokes a user session by its ID.
  rpc RevokeSession(lemmingtrip.models.v1.RevokeSessionRequest) returns (lemmingtrip.models.v1.RevokeSessionResponse);
  // ListSessions retrieves a list of user sessions for a specific account.
  rpc ListSessions(lemmingtrip.models.v1.ListSessionsRequest) returns (lemmingtrip.models.v1.ListSessionsResponse);
  // ListUserSessions retrieves a list of user sessions for a specific user.
  rpc RefreshSession(lemmingtrip.models.v1.RefreshSessionRequest) returns (lemmingtrip.models.v1.RefreshSessionResponse);
  // ValidateSession checks if a user session is valid based on its session token.
  rpc ValidateSession(lemmingtrip.models.v1.ValidateSessionRequest) returns (lemmingtrip.models.v1.ValidateSessionResponse);
  // TerminateAllSessions terminates all user sessions for a specific user.
  rpc TerminateAllSessions(lemmingtrip.models.v1.TerminateAllSessionsRequest) returns (lemmingtrip.models.v1.TerminateAllSessionsResponse);
  // GetActiveSessions retrieves a list of active user sessions for a specific user.
  rpc GetActiveSessions(lemmingtrip.models.v1.GetActiveSessionsRequest) returns (lemmingtrip.models.v1.GetActiveSessionsResponse);
  // UpdateSessionActivity updates the last activity timestamp for a user session.
  rpc UpdateSessionActivity(lemmingtrip.models.v1.UpdateSessionActivityRequest) returns (lemmingtrip.models.v1.UpdateSessionActivityResponse);
}
