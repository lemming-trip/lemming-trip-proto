syntax = "proto3";
package lemmingtrip.services.v1;

import "lemmingtrip/models/v1/account.proto";

option go_package = "github.com/lemming-trip/lemming-trip-proto/proto/lemmingtrip/services/v1;servicesv1";
option java_multiple_files = true;
option java_package = "com.lemmingtrip.services.v1";
option swift_prefix = "LTServicesV1";

service AccountService {
  // CreateAccount creates a new account with the provided details.
  rpc CreateAccountLocal(lemmingtrip.models.v1.CreateAccountLocalRequest) returns (lemmingtrip.models.v1.CreateAccountLocalResponse);
  // CreateAccountOAuth creates a new account using OAuth provider details.
  rpc CreateAccountOAuth(lemmingtrip.models.v1.CreateAccountOAuthRequest) returns (lemmingtrip.models.v1.CreateAccountOAuthResponse);
  // GetAccount retrieves an account by its ID.
  rpc GetAccount(lemmingtrip.models.v1.GetAccountRequest) returns (lemmingtrip.models.v1.GetAccountResponse);
  // UpdateAccount updates the details of an existing account.
  rpc UpdateAccount(lemmingtrip.models.v1.UpdateAccountRequest) returns (lemmingtrip.models.v1.UpdateAccountResponse);
  // DeleteAccount removes an account by its ID.
  rpc DeleteAccount(lemmingtrip.models.v1.DeleteAccountRequest) returns (lemmingtrip.models.v1.DeleteAccountResponse);
  // ListAccounts retrieves a list of accounts with pagination and filtering options.
  rpc ListAccounts(lemmingtrip.models.v1.ListAccountsRequest) returns (lemmingtrip.models.v1.ListAccountsResponse);
  // ActivateAccount activates an account using the provided activation code.
  rpc ActivateAccount(lemmingtrip.models.v1.ActivateAccountRequest) returns (lemmingtrip.models.v1.ActivateAccountResponse);
  // VerifyEmail verifies the email address associated with an account.
  rpc VerifyEmail(lemmingtrip.models.v1.VerifyEmailRequest) returns (lemmingtrip.models.v1.VerifyEmailResponse);
  // ResetPassword initiates a password reset process for an account.
  rpc ResetPassword(lemmingtrip.models.v1.ResetPasswordRequest) returns (lemmingtrip.models.v1.ResetPasswordResponse);
  // ChangePassword changes the password of an account.
  rpc EnableMFA(lemmingtrip.models.v1.EnableMFARequest) returns (lemmingtrip.models.v1.EnableMFAResponse);
  // DisableMFA disables multi-factor authentication for an account.
  rpc DisableMFA(lemmingtrip.models.v1.DisableMFARequest) returns (lemmingtrip.models.v1.DisableMFAResponse);
  // BanAccount bans an account, preventing it from logging in or performing actions.
  rpc BanAccount(lemmingtrip.models.v1.BanAccountRequest) returns (lemmingtrip.models.v1.BanAccountResponse);
  // UnbanAccount lifts the ban on an account, allowing it to log in and perform actions again.
  rpc UnbanAccount(lemmingtrip.models.v1.UnbanAccountRequest) returns (lemmingtrip.models.v1.UnbanAccountResponse);
  // ListUserAccounts retrieves a list of accounts associated with a user, with pagination and filtering options.
  rpc ListUserAccounts(lemmingtrip.models.v1.ListUserAccountsRequest) returns (lemmingtrip.models.v1.ListUserAccountsResponse);
}
