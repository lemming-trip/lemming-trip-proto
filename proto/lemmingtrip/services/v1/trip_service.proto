syntax = "proto3";
package lemmingtrip.services.v1;

import "lemmingtrip/models/v1/trip.proto";

option go_package = "github.com/lemming-trip/lemming-trip-proto/proto/lemmingtrip/services/v1;servicesv1";
option java_multiple_files = true;
option java_package = "com.lemmingtrip.services.v1";
option swift_prefix = "LTServicesV1";

service TripService {
  // CreateTrip creates a new trip with the provided details.
  rpc CreateTrip(lemmingtrip.models.v1.CreateTripRequest) returns (lemmingtrip.models.v1.CreateTripResponse);
  // GetTrip retrieves a trip by its ID.
  rpc GetTrip(lemmingtrip.models.v1.GetTripRequest) returns (lemmingtrip.models.v1.GetTripResponse);
  // UpdateTrip updates an existing trip with the provided details.
  rpc UpdateTrip(lemmingtrip.models.v1.UpdateTripRequest) returns (lemmingtrip.models.v1.UpdateTripResponse);
  // DeleteTrip removes a trip by its ID.
  rpc DeleteTrip(lemmingtrip.models.v1.DeleteTripRequest) returns (lemmingtrip.models.v1.DeleteTripResponse);
  // ListTrips retrieves a list of trips with pagination and filtering options.
  rpc ListTrips(lemmingtrip.models.v1.ListTripsRequest) returns (lemmingtrip.models.v1.ListTripsResponse);

  // LikeTrip allows a user to like a trip.
  rpc LikeTrip(lemmingtrip.models.v1.LikeTripRequest) returns (lemmingtrip.models.v1.LikeTripResponse);
  // UnlikeTrip allows a user to remove their like from a trip.
  rpc UnlikeTrip(lemmingtrip.models.v1.UnlikeTripRequest) returns (lemmingtrip.models.v1.UnlikeTripResponse);
  // ListTripLikers retrieves a list of users who liked a specific trip.
  rpc ListTripLikers(lemmingtrip.models.v1.ListTripLikersRequest) returns (lemmingtrip.models.v1.ListTripLikersResponse);
  // IsTripLikedByUser checks if a specific user has liked a trip.
  rpc IsTripLikedByUser(lemmingtrip.models.v1.IsTripLikedByUserRequest) returns (lemmingtrip.models.v1.IsTripLikedByUserResponse);

  // RateTrip allows a user to rate a trip.
  rpc RateTrip(lemmingtrip.models.v1.RateTripRequest) returns (lemmingtrip.models.v1.RateTripResponse);
  // UpdateTripRating allows a user to update their rating for a trip.
  rpc GetUserTripRating(lemmingtrip.models.v1.GetUserTripRatingRequest) returns (lemmingtrip.models.v1.GetUserTripRatingResponse);
  // DeleteTripRating allows a user to remove their rating for a trip.
  rpc ListTripRatings(lemmingtrip.models.v1.ListTripRatingsRequest) returns (lemmingtrip.models.v1.ListTripRatingsResponse);

  // LogTripView logs a view of a trip by a user or an anonymous viewer.
  rpc LogTripView(lemmingtrip.models.v1.LogTripViewRequest) returns (lemmingtrip.models.v1.LogTripViewResponse);
  // GetTripViewsCount retrieves the total number of views for a specific trip.
  rpc GetTripViewsCount(lemmingtrip.models.v1.GetTripViewsCountRequest) returns (lemmingtrip.models.v1.GetTripViewsCountResponse);
  // ListTripViewers retrieves a list of users who have viewed a specific trip.
  rpc ListTripViewers(lemmingtrip.models.v1.ListTripViewersRequest) returns (lemmingtrip.models.v1.ListTripViewersResponse);

  // SearchTrips allows users to search for trips based on various criteria.
  rpc SearchTrips(lemmingtrip.models.v1.SearchTripsRequest) returns (lemmingtrip.models.v1.SearchTripsResponse);
  // ListUserTrips retrieves a list of trips created by a specific user.
  rpc RestoreTrip(lemmingtrip.models.v1.RestoreTripRequest) returns (lemmingtrip.models.v1.RestoreTripResponse);
  // FeatureTrip allows a user to feature or unfeature a trip.
  rpc FeatureTrip(lemmingtrip.models.v1.FeatureTripRequest) returns (lemmingtrip.models.v1.FeatureTripResponse);
  // GetTripStats retrieves statistics for a specific trip, including likes, views, and ratings.
  rpc GetTripStats(lemmingtrip.models.v1.GetTripStatsRequest) returns (lemmingtrip.models.v1.GetTripStatsResponse);
  // BatchDeleteTrips allows for the deletion of multiple trips in a single request.
  rpc BatchDeleteTrips(lemmingtrip.models.v1.BatchDeleteTripsRequest) returns (lemmingtrip.models.v1.BatchDeleteTripsResponse);
}
