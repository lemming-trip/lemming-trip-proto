syntax = "proto3";
package lemmingtrip.services.v1;

import "models/v1/oauth_token.proto";

option go_package = "github.com/lemming-trip/lemming-trip-proto/services/v1;servicesv1";
option java_multiple_files = true;
option java_package = "com.lemmingtrip.services.v1";
option swift_prefix = "LTServicesV1";

// OAuthTokensService provides methods for managing OAuth tokens, including creation, retrieval, refreshing, validation, and revocation.
// It allows clients to securely manage access tokens for user authentication and authorization.
service OAuthTokensService {
  // CreateToken creates a new OAuth token for a user, client, and requested scopes.
  rpc CreateToken(lemmingtrip.models.v1.CreateTokenRequest) returns (lemmingtrip.models.v1.CreateTokenResponse);
  // GetToken retrieves an OAuth token by its ID.
  rpc GetToken(lemmingtrip.models.v1.GetTokenRequest) returns (lemmingtrip.models.v1.GetTokenResponse);
  // RefreshToken requests a new access token using a refresh token.
  rpc RefreshToken(lemmingtrip.models.v1.RefreshTokenRequest) returns (lemmingtrip.models.v1.RefreshTokenResponse);
  // ValidateToken checks if an access token is valid and returns the token details if valid.
  rpc ValidateToken(lemmingtrip.models.v1.ValidateTokenRequest) returns (lemmingtrip.models.v1.ValidateTokenResponse);
  // RevokeToken revokes a specific OAuth token by its ID, making it no longer valid for use.
  rpc RevokeToken(lemmingtrip.models.v1.RevokeTokenRequest) returns (lemmingtrip.models.v1.RevokeTokenResponse);
  // RevokeAllTokens revokes all tokens associated with a specific user and client, ensuring that all sessions are invalidated.
  rpc RevokeAllTokens(lemmingtrip.models.v1.RevokeAllTokensRequest) returns (lemmingtrip.models.v1.RevokeAllTokensResponse);
  // ListTokens retrieves a list of OAuth tokens with pagination and filtering options.
  rpc ListTokens(lemmingtrip.models.v1.ListTokensRequest) returns (lemmingtrip.models.v1.ListTokensResponse);
  // ListUserTokens retrieves a list of OAuth tokens for a specific user with pagination options.
  rpc ListUserTokens(lemmingtrip.models.v1.ListUserTokensRequest) returns (lemmingtrip.models.v1.ListUserTokensResponse);
  // GetActiveTokens retrieves all active tokens for a specific user, allowing clients to manage user sessions effectively.
  rpc GetActiveTokens(lemmingtrip.models.v1.GetActiveTokensRequest) returns (lemmingtrip.models.v1.GetActiveTokensResponse);
}
