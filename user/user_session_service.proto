syntax = "proto3";

package lemmingtrip.user;

import "user/user_session.proto";

// UserSessionsService defines the service for managing user sessions.
// It includes methods for creating, retrieving, revoking, and listing user sessions,
// as well as additional methods for session management such as refreshing, validating,
// and terminating sessions.
// This service is designed to handle user session operations in a secure and efficient manner.
// It is used by the user session management system to ensure that user sessions are
// properly managed and maintained throughout their lifecycle.
service UserSessionsService {
  // CreateSession creates a new user session with the provided details.
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  // GetSession retrieves a user session by its ID.
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse);
  // RevokeSession revokes a user session by its ID.
  rpc RevokeSession(RevokeSessionRequest) returns (RevokeSessionResponse);
  // ListSessions retrieves a list of user sessions for a specific account.
  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse);
  // ListUserSessions retrieves a list of user sessions for a specific user.
  rpc RefreshSession(RefreshSessionRequest) returns (RefreshSessionResponse);
  // ValidateSession checks if a user session is valid based on its session token.
  rpc ValidateSession(ValidateSessionRequest) returns (ValidateSessionResponse);
  // TerminateAllSessions terminates all user sessions for a specific user.
  rpc TerminateAllSessions(TerminateAllSessionsRequest) returns (TerminateAllSessionsResponse);
  // GetActiveSessions retrieves a list of active user sessions for a specific user.
  rpc GetActiveSessions(GetActiveSessionsRequest) returns (GetActiveSessionsResponse);
  // UpdateSessionActivity updates the last activity timestamp for a user session.
  rpc UpdateSessionActivity(UpdateSessionActivityRequest) returns (UpdateSessionActivityResponse);
}
